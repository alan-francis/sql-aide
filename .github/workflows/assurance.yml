name: assurance

on:
  push:
    branches:
      - main
      - master

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@master

      # see https://github.com/denoland/setup-deno
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - run: deno --version

      # TODO: syntax check all files in case tests don't exist
      # Tried on March 7, 2023 and saw this in GitHub Actions:
      #   error: Module not found "file:///home/runner/work/sql-aide/sql-aide/**/*.ts".
      # - run: deno check **/*.ts

      # Run all test files in the repository and collect code coverage.
      # The example runs with all permissions, but it is recommended to run
      # with the minimal permissions your program needs (for example --allow-read).
      - run: deno test --allow-all --unstable --coverage=coverage

      # This generates a report from the collected coverage in `deno test --coverage`.
      # It is stored as a .lcov file which integrates well with services such
      # as Codecov, Coveralls and Travis CI.
      - run: deno --unstable coverage ./coverage --lcov > coverage.lcov

      - name: Collect coverage
        uses: codecov/codecov-action@v3 # upload the report on Codecov
        with:
          file: ./coverage.lcov

      # Check if the code is formatted according to Deno's default formatting conventions.
      - run: deno fmt --check

      # Scan the code for syntax errors and style issues.
      # If you want to use a custom linter configuration you can add a configuration file with --config <myconfig>
      - run: deno lint
